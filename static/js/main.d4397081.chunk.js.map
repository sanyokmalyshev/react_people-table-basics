{"version":3,"sources":["components/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeoplePage.tsx","components/NotFoundPage.tsx","components/PageNavLink.tsx","components/NavBar.tsx","App.tsx","index.tsx"],"names":["HomePage","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","to","slug","classNames","sex","name","PeoplePage","useState","loadingError","setLoadingError","people","setPeople","isLoading","setIsLoading","useParams","searchName","existPerson","find","useEffect","loadPeople","length","map","born","died","motherName","fatherName","NotFoundPage","PageNavLink","text","isActive","NavBar","role","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.d4397081.chunk.js","sourcesContent":["export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\nexport type Props = {\n  person: Person | undefined;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => (\n  <Link\n    to={`/people/${person?.slug}`}\n    className={classNames({ 'has-text-danger': person?.sex === 'f' })}\n  >\n    {person?.name}\n  </Link>\n);\n","import classNames from 'classnames';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { Loader } from './Loader';\nimport { PersonLink } from './PersonLink';\n\nexport const PeoplePage = () => {\n  const [loadingError, setLoadingError] = useState(false);\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { slug } = useParams();\n\n  async function loadPeople() {\n    setIsLoading(true);\n    try {\n      setLoadingError(false);\n      const response = await getPeople();\n\n      setPeople(response);\n    } catch (e) {\n      setLoadingError(true);\n    }\n\n    setIsLoading(false);\n  }\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  function searchName(name: string | null) {\n    const existPerson = people.find(person => person.name === name);\n\n    if (!existPerson) {\n      return name || '-';\n    }\n\n    return <PersonLink person={existPerson} />;\n  }\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {loadingError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!people.length && !loadingError && !isLoading && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {!!people.length && !loadingError && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people.map(person => (\n                  <tr\n                    data-cy=\"person\"\n                    key={person.name}\n                    className={classNames(\n                      { 'has-background-warning': person.slug === slug },\n                    )}\n                  >\n                    <td>\n                      <PersonLink person={person} />\n                    </td>\n\n                    <td>{person.sex}</td>\n                    <td>{person.born}</td>\n                    <td>{person.died}</td>\n                    <td>\n                      {searchName(person.motherName)}\n                    </td>\n                    <td>\n                      {searchName(person.fatherName)}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport type Props = {\n  to: string;\n  text: string;\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => (\n      classNames('navbar-item', { 'has-background-grey-lighter': isActive })\n    )}\n  >\n    {text}\n  </NavLink>\n);\n","import { PageNavLink } from './PageNavLink';\n\nexport const NavBar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n        <PageNavLink to=\"/people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { NavBar } from './components/NavBar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"people/:slug\" element={<PeoplePage />} />\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}